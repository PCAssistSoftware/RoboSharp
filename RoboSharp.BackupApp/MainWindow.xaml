<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:local="clr-namespace:RoboSharp.BackupApp" 
        x:Class="RoboSharp.BackupApp.MainWindow"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
        mc:Ignorable="d" 
        xmlns:cv="clr-namespace:RoboSharp.BackupApp.Converters"
        xmlns:views="clr-namespace:RoboSharp.BackupApp.Views"
        xmlns:viewmodels="clr-namespace:RoboSharp.BackupApp.ViewModels"
        d:DataContext="{d:DesignInstance IsDesignTimeCreatable=False, Type=viewmodels:MainWindowViewModel}"
        Title="Backup App" Height="700" Width="750" ResizeMode="CanResizeWithGrip" MinWidth="750" MinHeight="650" 
    >
    <Window.Resources>
        <cv:StringToIntConverter x:Key="IntConverter"/>
        <cv:StringSplitter x:Key="StringArrayConverter"/>
        <cv:RunHoursConverter x:Key="RunHoursConverter"/>
    </Window.Resources>
    <Grid IsSharedSizeScope="True">
        <TabControl>
            <TabItem Header="Options" x:Name="OptionsTab">
                <Grid>
                    <ScrollViewer Margin="0,0,0,0" VerticalScrollBarVisibility="Auto">
                        <StackPanel x:Name="OptionsGrid" Height="auto">
                            <!-- Styles -->
                            <StackPanel.Resources>
                                <Style TargetType="StackPanel" x:Key="userInputs">
                                    <Setter Property="Orientation" Value="Horizontal"/>
                                    <Setter Property="Margin" Value="10,10,10,0"/>
                                </Style>
                                <Style TargetType="TextBlock" x:Key="userInputTxtBlock">
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                    <Setter Property="TextWrapping" Value="NoWrap"/>
                                    <Setter Property="Width" Value="110"/>
                                </Style>
                                <Style TargetType="TextBox" x:Key="userInputTextBox">
                                    <Setter Property="Margin" Value="10,0"/>
                                    <Setter Property="MinWidth" Value="175"/>
                                    <Setter Property="MaxWidth" Value="600"/>
                                    <Setter Property="Height" Value="23"/>
                                </Style>
                                <Style TargetType="Button" x:Key="userInputButton">
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="Padding" Value="0,5"/>
                                    <Setter Property="Width" Value="100"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                </Style>
                            </StackPanel.Resources>
                            <!-- Source -->
                            <StackPanel Style="{StaticResource userInputs}">
                                <TextBlock Text="Source" Style="{StaticResource userInputTxtBlock}" />
                                <TextBox x:Name="Source" Text="{Binding CommandGenerator.Command.CopyOptions.Source}" Width="400" Style="{StaticResource userInputTextBox}"/>
                                <Button Content="Browse" Command="{Binding CommandGenerator.BtnSelectSourceCommand}" Style="{StaticResource userInputButton}" />
                            </StackPanel>
                            <!-- Destination -->
                            <StackPanel Style="{StaticResource userInputs}">
                                <TextBlock Text="Destination" Style="{StaticResource userInputTxtBlock}"/>
                                <TextBox x:Name="Destination" Text="{Binding CommandGenerator.Command.CopyOptions.Destination}" Width="400" Style="{StaticResource userInputTextBox}" />
                                <Button x:Name="DestinationBrowseButton" Content="Browse"  Command="{Binding CommandGenerator.BtnSelectDestinationCommand}" Style="{StaticResource userInputButton}"/>
                            </StackPanel>
                            <!-- RoboCommandParser.Parse -->
                            <StackPanel Style="{StaticResource userInputs}" DataContext="{Binding CommandGenerator}">
                                <TextBlock Text="Command Parsing" Style="{StaticResource userInputTxtBlock}"/>
                                <TextBox Text="{Binding ParseCommandText, UpdateSourceTrigger=PropertyChanged}" Width="400" ToolTip="Paste a valid RoboCopy string here to parse it" Style="{StaticResource userInputTextBox}" />
                                <Button Command="{Binding BtnParseCommandCommand}" Content="Parse" ToolTip="Parse the input string" Style="{StaticResource userInputButton}"/>
                            </StackPanel>
                            <!-- RoboCommandParser.ParseOptions -->
                            <StackPanel Style="{StaticResource userInputs}" DataContext="{Binding CommandGenerator}">
                                <TextBlock Text="Option Parsing" Style="{StaticResource userInputTxtBlock}"/>
                                <TextBox Text="{Binding ParseCommandOptionsText, UpdateSourceTrigger=PropertyChanged}" Width="400" ToolTip="Parse Options Only - Must not contain 'robocopy', a source, or a destination." Style="{StaticResource userInputTextBox}" />
                                <Button Command="{Binding BtnParseCommandOptionsCommand}" Content="Parse Options" ToolTip="Parse the input string"  Style="{StaticResource userInputButton}"/>
                            </StackPanel>
                            <!-- Job Name -->
                            <StackPanel Style="{StaticResource userInputs}">
                                <TextBlock Text="Job Name (Optional)" Style="{StaticResource userInputTxtBlock}"/>
                                <TextBox Text="{Binding CommandGenerator.JobNameTextbox}"  Width="175" Style="{StaticResource userInputTextBox}"/>
                            </StackPanel>
                            <!-- Job Options -->
                            <StackPanel Margin="34,10,20,10" DataContext="{Binding CommandGenerator}" Name="CopyOptionsExpander">
                                <Expander Background="LightBlue" Header="Copy Options" DataContext="{Binding Command.CopyOptions}">
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="5" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="File Filter" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Copy Subdirectories (/S)" />
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Copy Subdirectories Including Empty (/E)" />
                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Depth (/LEV:N)" />
                                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Enable Restart Mode (/Z)" />
                                        <TextBlock Grid.Row="5" Grid.Column="0" Text="Enable Backup Mode (/B)" />
                                        <TextBlock Grid.Row="6" Grid.Column="0" Text="Enable Restart Mode With Backup Fallback (/ZB)" />
                                        <TextBlock Grid.Row="7" Grid.Column="0" Text="Use Unbuffered I/O (/J)" />
                                        <TextBlock Grid.Row="8" Grid.Column="0" Text="Enable EFS Raw Mode (/EFSRAW)" />
                                        <TextBlock Grid.Row="9" Grid.Column="0" Text="Copy Flags (/COPY:copyflags)" />
                                        <TextBlock Grid.Row="10" Grid.Column="0" Text="Copy Files With Security (/SEC)" />
                                        <TextBlock Grid.Row="11" Grid.Column="0" Text="Copy All (/COPYALL)" />
                                        <TextBlock Grid.Row="12" Grid.Column="0" Text="Remove File Information (/NOCOPY)" />
                                        <TextBlock Grid.Row="13" Grid.Column="0" Text="Fix File Security On All Files (/SECFIX)" />
                                        <TextBlock Grid.Row="14" Grid.Column="0" Text="Fix File Times On All Files (/TIMFIX)" />
                                        <TextBlock Grid.Row="15" Grid.Column="0" Text="Purge (/PURGE)" />
                                        <TextBlock Grid.Row="16" Grid.Column="0" Text="Mirror (/MIR)" />
                                        <TextBlock Grid.Row="17" Grid.Column="0" Text="Move Files (/MOV)" />
                                        <TextBlock Grid.Row="18" Grid.Column="0" Text="Move Files and Directories (/MOVE)" />
                                        <TextBlock Grid.Row="19" Grid.Column="0" Text="Add Attributes (/A+:attributes)" />
                                        <TextBlock Grid.Row="20" Grid.Column="0" Text="Remove Attributes (/A-:attributes)" />
                                        <TextBlock Grid.Row="21" Grid.Column="0" Text="Create Directory and File Tree (/CREATE)" />
                                        <TextBlock Grid.Row="22" Grid.Column="0" Text="Fat Files (/FAT)" />
                                        <TextBlock Grid.Row="23" Grid.Column="0" Text="Turn Long Path Support Off (/256)" />
                                        <TextBlock Grid.Row="24" Grid.Column="0" Text="Monitor Source Changes Limit (/MON:N)" />
                                        <TextBlock Grid.Row="25" Grid.Column="0" Text="Monitor Source Time Limit (/MOT:N)" />
                                        <TextBlock Grid.Row="26" Grid.Column="0" Text="RunHours (/RH:hhmm-hhmm)" />

                                        <GridSplitter Width="5" Grid.Row="0" Grid.RowSpan="100" Grid.Column="1" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" />

                                        <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding FileFilter, Converter={StaticResource StringArrayConverter}}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="1" Grid.Column="2" IsChecked="{Binding CopySubdirectories}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="2" Grid.Column="2" IsChecked="{Binding CopySubdirectoriesIncludingEmpty}" Margin="10,0,0,0" />
                                        <TextBox Grid.Row="3" Grid.Column="2" Text="{Binding Depth, Converter={StaticResource IntConverter}}" x:Name="Depth" Margin="10,0,0,0" PreviewTextInput="IsNumeric_PreviewTextInput" Width="50" HorizontalAlignment="Left" />
                                        <CheckBox Grid.Row="4" Grid.Column="2" IsChecked="{Binding EnableRestartMode}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="5" Grid.Column="2" IsChecked="{Binding EnableBackupMode}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="6" Grid.Column="2" IsChecked="{Binding EnableRestartModeWithBackupFallback}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="7" Grid.Column="2" IsChecked="{Binding UseUnbufferedIo}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="8" Grid.Column="2" IsChecked="{Binding EnableEfsRawMode}" Margin="10,0,0,0" />
                                        <TextBox Grid.Row="9" Grid.Column="2" Text="{Binding CopyFlags}" Margin="10,0,0,0" PreviewTextInput="IsCopyFlag_PreviewTextInput" Width="100" HorizontalAlignment="Left" />
                                        <CheckBox Grid.Row="10" Grid.Column="2" IsChecked="{Binding CopyFilesWithSecurity}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="11" Grid.Column="2" IsChecked="{Binding CopyAll}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="12" Grid.Column="2" IsChecked="{Binding RemoveFileInformation}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="13" Grid.Column="2" IsChecked="{Binding FixFileSecurityOnAllFiles}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="14" Grid.Column="2" IsChecked="{Binding FixFileTimesOnAllFiles}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="15" Grid.Column="2" IsChecked="{Binding Purge}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="16" Grid.Column="2" IsChecked="{Binding Mirror}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="17" Grid.Column="2" IsChecked="{Binding MoveFiles}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="18" Grid.Column="2" IsChecked="{Binding MoveFilesAndDirectories}" Margin="10,0,0,0" />
                                        <TextBox Grid.Row="19" Grid.Column="2" Text="{Binding AddAttributes}" Margin="10,0,0,0" PreviewTextInput="IsAttribute_PreviewTextInput" Width="100" HorizontalAlignment="Left" />
                                        <TextBox Grid.Row="20" Grid.Column="2" Text="{Binding RemoveAttributes}" Margin="10,0,0,0" PreviewTextInput="IsAttribute_PreviewTextInput" Width="100" HorizontalAlignment="Left" />
                                        <CheckBox Grid.Row="21" Grid.Column="2" IsChecked="{Binding CreateDirectoryAndFileTree}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="22" Grid.Column="2" IsChecked="{Binding FatFiles}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="23" Grid.Column="2" IsChecked="{Binding TurnLongPathSupportOff}" Margin="10,0,0,0" />
                                        <TextBox Grid.Row="24" Grid.Column="2" Text="{Binding MonitorSourceChangesLimit, Converter={StaticResource IntConverter}}" Margin="10,0,0,0" PreviewTextInput="IsNumeric_PreviewTextInput" Width="50" HorizontalAlignment="Left" />
                                        <TextBox Grid.Row="25" Grid.Column="2" Text="{Binding MonitorSourceTimeLimit, Converter={StaticResource IntConverter}}"  Margin="10,0,0,0" PreviewTextInput="IsNumeric_PreviewTextInput" Width="50" HorizontalAlignment="Left" />
                                        <TextBox Grid.Row="26" Grid.Column="2" Text="{Binding ElementName=CopyOptionsExpander, Path=DataContext.RunHoursStart}" Margin="10,0,0,0" PreviewTextInput="IsNumeric_PreviewTextInput" Width="50" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="26" Grid.Column="2" Text="-" Margin="62,2,0,0" />
                                        <TextBox Grid.Row="26" Grid.Column="2" Text="{Binding ElementName=CopyOptionsExpander, Path=DataContext.RunHoursEnd}" Margin="70,0,0,0" PreviewTextInput="IsNumeric_PreviewTextInput" Width="50" HorizontalAlignment="Left" />
                                    </Grid>
                                </Expander>
                                <Expander Background="LightGreen" Header="Select Options" DataContext="{Binding Command.SelectionOptions}">
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="5" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Only Copy Archive Files (/A)" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Only Copy Archive Files And Reset Archive Flag (/M)" />
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Include Attributes (/IA:attributes)" />
                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Exclude Attributes (/XA:attributes)" />
                                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Exclude Files (/XF File File ...)" />
                                        <TextBlock Grid.Row="5" Grid.Column="0" Text="Exclude Directories (/XD Dir Dir ...)" />
                                        <TextBlock Grid.Row="6" Grid.Column="0" Text="Exclude Older (/XO)" />
                                        <TextBlock Grid.Row="7" Grid.Column="0" Text="Exclude NEWER (/XN)" />
                                        <TextBlock Grid.Row="8" Grid.Column="0" Text="Exclude Junction Points (/XJ)" />

                                        <GridSplitter Width="5" Grid.Row="0" Grid.RowSpan="100" Grid.Column="1" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" />

                                        <CheckBox Grid.Row="0" Grid.Column="2" IsChecked="{Binding OnlyCopyArchiveFiles}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="1" Grid.Column="2" IsChecked="{Binding OnlyCopyArchiveFilesAndResetArchiveFlag}" Margin="10,0,0,0" />
                                        <TextBox Grid.Row="2" Grid.Column="2" Text="{Binding IncludeAttributes}" Margin="10,0,0,0" PreviewTextInput="IsAttribute_PreviewTextInput" Width="100" HorizontalAlignment="Left" />
                                        <TextBox Grid.Row="3" Grid.Column="2" Text="{Binding ExcludeAttributes}" Margin="10,0,0,0" PreviewTextInput="IsAttribute_PreviewTextInput" Width="100" HorizontalAlignment="Left" />
                                        <TextBox Grid.Row="4" Grid.Column="2" Text="{Binding ExcludeFiles}" Margin="10,0,0,0" ToolTip="Separate entries with space or comma&#x0a;If filename or path contains spaces then enclose in quotes&#x0a;e.g. &quot;my file.txt&quot;,file1.txt file2.txt"/>
                                        <TextBox Grid.Row="5" Grid.Column="2" Text="{Binding ExcludeDirectories}" Margin="10,0,0,0" ToolTip="Separate entries with space or comma&#x0a;If filename or path contains spaces then enclose in quotes&#x0a;e.g. &quot;my file.txt&quot;,file1.txt file2.txt"/>
                                        <CheckBox Grid.Row="6" Grid.Column="2" IsChecked="{Binding ExcludeOlder}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="7" Grid.Column="2" IsChecked="{Binding ExcludeNewer}" Margin="10,0,0,0" />
                                        <CheckBox Grid.Row="8" Grid.Column="2" IsChecked="{Binding ExcludeJunctionPoints}" Margin="10,0,0,0" />

                                    </Grid>
                                </Expander>
                                <Expander Background="PaleGoldenrod" Header="Retry Options" DataContext="{Binding Command.RetryOptions}">
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="5" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Retry Count (/R:N)" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Retry Wait Time (/W:N)" />

                                        <GridSplitter Width="5" Grid.Row="0" Grid.RowSpan="100" Grid.Column="1" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" />

                                        <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding RetryCount, Converter={StaticResource IntConverter}}" Margin="10,0,0,0" PreviewTextInput="IsNumeric_PreviewTextInput" Width="50" HorizontalAlignment="Left" />
                                        <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding RetryWaitTime, Converter={StaticResource IntConverter}}" Margin="10,0,0,0" PreviewTextInput="IsNumeric_PreviewTextInput" Width="50" HorizontalAlignment="Left" />
                                    </Grid>

                                </Expander>
                                <Expander Background="LightGray" Header="Logging Options" DataContext="{Binding Command.LoggingOptions}">
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="5" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Verbose Output (/V)" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="No File Size (/NS)" />
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="No Progress (/NP)" />
                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="List Only (/L)" />

                                        <GridSplitter Width="5" Grid.Row="0" Grid.RowSpan="100" Grid.Column="1" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" />

                                        <CheckBox Grid.Row="0" Grid.Column="2" Margin="10,0,0,0" IsChecked="{Binding VerboseOutput}" />
                                        <CheckBox Grid.Row="1" Grid.Column="2" Margin="10,0,0,0" IsChecked="{Binding NoFileSizes}"/>
                                        <CheckBox Grid.Row="2" Grid.Column="2" Margin="10,0,0,0" IsChecked="{Binding NoProgress}"/>
                                        <CheckBox Grid.Row="3" Grid.Column="2" Margin="10,0,0,0" IsChecked="{Binding ListOnly}"/>

                                    </Grid>
                                </Expander>
                            </StackPanel>
                            <!-- Single Job GroupBox -->
                            <GroupBox Header="Single Job ( RoboCommand )"  Grid.Row="5" Margin="34,0,0,5" Height="60" Width="Auto"  HorizontalAlignment="Left" >
                                <Grid>
                                    <Button Content="Load Job" HorizontalAlignment="Left" Margin="20,10,30,0" VerticalAlignment="Top" Width="75" Command="{Binding BtnLoadJobCommand}" />
                                    <Button Content="Save Job" HorizontalAlignment="Left" Margin="115,10,30,0" VerticalAlignment="Top" Width="75" Command="{Binding BtnSaveJobCommand}"/>
                                    <Button Content="Start Job" HorizontalAlignment="Left" Margin="205,10,20,0" VerticalAlignment="Top" Width="75" Command="{Binding BtnStartJobCommand}" Click="StartButton_Click"/>
                                    <Button Content="Reset Options" HorizontalAlignment="Left" Margin="295,10,20,0" VerticalAlignment="Top" Width="75" Command="{Binding CommandGenerator.ResetOptionsCommand}"/>
                                </Grid>
                            </GroupBox>
                            <!-- Multi-Job GroupBox -->
                            <StackPanel Orientation="Horizontal" Margin="34,10,10,0">
                                <GroupBox Header="Multiple Jobs ( RoboQueue )" Height="Auto" Width="Auto" HorizontalAlignment="Left" >
                                    <Grid IsSharedSizeScope="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="5"/>
                                            <RowDefinition Height="50"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="200"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="120"/>
                                            <ColumnDefinition Width="120"/>
                                            <ColumnDefinition Width="120"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Button Command="{Binding BtnAddToRoboQueueCommand}" Content="Add to Queue" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="98" />
                                        <Button Command="{Binding BtnReplaceRoboQueueCommandCommand}" Content="Replace Selected"  Grid.Row="1" Grid.Column="1" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center" Width="98" />
                                        <Button Command="{Binding RoboQueueViewModel.BtnRemoveSelectedItemCommand}" Content="Remove Selected" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Width="98" />
                                        <Button Command="{Binding BtnLoadRoboQueueCommand}" Content="Modify Selected" Grid.Row="3" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Top" Width="98" />
                                        <!-- Concurrent Jobs -->
                                        <Label x:Name="lbloncurrentJobs" Content="Commands to run at once (0 = all):" Grid.Row="3" Grid.Column="2" Margin="0,0,0,73" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
                                        <ComboBox SelectedValue="{Binding RoboQueueViewModel.MaxConcurrentJobs}" ItemsSource="{Binding RoboQueueViewModel.Ints}" Grid.Row="3" Grid.Column="3"  Margin="34,0,0,46"  HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="40" RenderTransformOrigin="-1.375,0.727" />
                                        <!-- Start Queue Options -->
                                        <CheckBox IsChecked="{Binding RoboQueueViewModel.RunAsListOnly}" Content="ListOnly Mode"  Grid.Row="3" Grid.Column="2"  Margin="5,0,0,46" HorizontalAlignment="Left" VerticalAlignment="Bottom" FlowDirection="RightToLeft" RenderTransformOrigin="0.175,-1.267" />
                                        <Button Command="{Binding RoboQueueViewModel.BtnStartStopQueueCommand}" Content="Start Job Queue" Grid.Row="3" Grid.Column="2" Margin="96,0,38,10"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="98" Grid.ColumnSpan="2" Click="RoboQueueStart_Click"/>
                                        <!-- Listbox Header-->
                                        <Grid Margin="38,0,0,0" Grid.Row="2" Width="410" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.ColumnSpan="4">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="ListBoxColumn1"/>
                                                <ColumnDefinition SharedSizeGroup="ListBoxColumn2"/>
                                                <ColumnDefinition SharedSizeGroup="ListBoxColumn3"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" Content="Job Name" HorizontalAlignment="Left" Width="Auto" Visibility="Visible"/>
                                            <Label Grid.Column="2" Content="Parameters" HorizontalAlignment="Left" Width="Auto"/>
                                        </Grid>
                                        <!-- https://stackoverflow.com/questions/8911026/multicolumn-listbox-in-wpf -->
                                        <ListBox ItemsSource="{Binding RoboQueueViewModel.Command}" SelectedItem="{Binding RoboQueueViewModel.SelectedCommand}" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,5,0,0" >
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Height="20">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="ListBoxColumn1"/>
                                                            <ColumnDefinition Width="15" SharedSizeGroup="ListBoxColumn2"/>
                                                            <ColumnDefinition Width="*" SharedSizeGroup="ListBoxColumn3"/>
                                                        </Grid.ColumnDefinitions>
                                                        <!-- Bind to the NAME property -->
                                                        <TextBlock Grid.Column="0" Text="{Binding Path=Name}"/>
                                                        <!-- Bind to the ToString method-->
                                                        <TextBlock Grid.Column="2" Text="{Binding}"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </Grid>
                                </GroupBox>
                                <GroupBox Header="RoboSharp Debugging" Height="302" MinWidth="189" HorizontalAlignment="Left">
                                    <StackPanel Margin="10" HorizontalAlignment="Right">
                                        <CheckBox x:Name="chk_SaveEventLogs" Content="EventLogging" ToolTip="Create LogFiles for OnCopyProgressChanged and OnFileProcessed"  FlowDirection="RightToLeft" RenderTransformOrigin="0.175,-1.267" x:FieldModifier="public"/>
                                        <CheckBox Content="RoboSharpConfiguration.EnableFileLogging" 
                                                  ToolTip="Record the FileNames into the Results log lines"  
                                                  IsChecked="{Binding CommandGenerator.ConfigurationEnableFileLogging}"
                                                  FlowDirection="RightToLeft" RenderTransformOrigin="0.175,-1.267"/>
                                    </StackPanel>
                                </GroupBox>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <!-- Single-Job Tab -->
            <TabItem x:Name="SingleJobTab" Header="Single Job ( RoboCommand )" >
                <Grid x:Name="SingleJobTabGrid" Background="#FFE5E5E5">
                    <ScrollViewer Height="Auto" Margin="0,10,5,0" VerticalAlignment="Top" MinWidth="693" Grid.ColumnSpan="4">
                        <StackPanel>
                            <Expander Header="Progress" Background="LightBlue" IsExpanded="True" x:Name="SingleJobExpander_Progress" >
                                <views:CommandProgressView DataContext="{Binding SingleJobProgress}" RenderTransformOrigin="0.5,0.5" Background="LightBlue"/>
                            </Expander>
                            <Expander x:Name="SingleJobExpander_Errors" Background="LightGreen" Header="{Binding SingleJobProgress.ErrorsHeader, FallbackValue='Errors'}">
                                <DataGrid x:Name="SingleJobErrorGrid" MinHeight="100" Margin="10" ItemsSource="{Binding SingleJobProgress.Errors}"/>
                            </Expander>
                            <local:JobHistoryExpander DataContext="{Binding SingleJobHistory}" x:Name="SingleJobExpander_JobHistory" RenderTransformOrigin="0.5,0.5"/>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <!-- Multi-Job Tab -->
            <TabItem x:Name="MultiJobProgressTab" Header="Multi-Job ( RoboQueue )">
                <Grid Margin="5" Background="#FFE5E5E5">
                    <ScrollViewer HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Stretch">
                        <StackPanel>
                            <!-- RoboQueue Panel -->
                            <Expander x:Name="MultiJobExpander_Jobs" Background="LightBlue" Header="RoboQueue" RenderTransformOrigin="0.5,0.5">
                                <Grid Margin="15">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="150"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="300"/>
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <!-- ListBox / Edit / Remove buttons -->
                                    <ListBox Grid.Row="0" Grid.Column="0" 
                                             ItemsSource="{Binding RoboQueueViewModel.Command}" 
                                             SelectedItem="{Binding RoboQueueViewModel.SelectedCommand}" 
                                             />
                                    <!--
                                    <Button x:Name="btnUpdateSelectedJob_Copy" Content="Update Selected" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="98" Click="btn_LoadSelected"/>
                                    <Button x:Name="btnRemoveSelectedJob_Copy" Content="Remove Selected" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="98" Click="btn_RemoveSelected"/>
                                    -->
                                    <!-- Commands Count To Run -->
                                    <Label Grid.Row="0" Grid.Column="1"  Margin="5,0,40,0" Content="Commands to run at once (0 = all):" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                    <ComboBox  SelectedValue="{Binding RoboQueueViewModel.MaxConcurrentJobs}" ItemsSource="{Binding RoboQueueViewModel.Ints}"  Grid.Row="0" Grid.Column="1" Margin="0,5,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="40" />
                                    <!-- ListOnly and Start Btn -->
                                    <CheckBox IsChecked="{Binding RoboQueueViewModel.RunAsListOnly}" Grid.Row="0" Grid.Column="1"  Margin="0,0,13,30" Content="ListOnly Mode" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                                    <Button Command="{Binding RoboQueueViewModel.BtnStartStopQueueCommand}"  Click="RoboQueueStart_Click" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="110" Content="Start Job Queue" />
                                    <Button Command="{Binding RoboQueueViewModel.BtnPauseResumeCommand}" Grid.Row="1" Grid.Column="1" Margin="0,10,0,0" Content="Pause Job Queue" HorizontalAlignment="Right" Width="110" />
                                </Grid>
                            </Expander>
                            <!-- Progress Expander -->
                            <Expander x:Name="MultiJobExpander_Progress" Background="LightBlue" Header="Progress" RenderTransformOrigin="0.5,0.5">
                                <Grid IsEnabled="true" Margin="10">
                                    <Grid.RowDefinitions>
                                        <!-- 0 -->
                                        <RowDefinition MinHeight="30"/>
                                        <!--Estimators -->
                                        <RowDefinition MinHeight="140"/>
                                        <!-- 2 & 3 - ProgressBar & Label -->
                                        <RowDefinition />
                                        <RowDefinition />
                                        <!-- 4 - Spacer between PB & Command Progress Expanders-->
                                        <RowDefinition Name="MultiProgressBufferRow" MinHeight="10"/>
                                        <!-- 5+ - ProgressExpanders - 1 per job in queue -->
                                        <RowDefinition x:Name="FirstMultiProgressExpander"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200" />
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="Number of jobs running:" Grid.Row="0" Grid.Column="0" TextWrapping="Wrap" FontWeight="Bold"/>
                                    <TextBlock Text="{Binding RoboQueueViewModel.JobsRunning}" Grid.Row="0" Grid.Column="1" TextWrapping="Wrap" Foreground="#FF000099"/>
                                    <!-- Overall Estimate Grid -->
                                    <GroupBox Header="Total Estimate"  
                                              Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Width="650"
                                              HorizontalAlignment="Center" VerticalAlignment="Center" 
                                              >
                                        <Grid IsEnabled="true" Margin="15" VerticalAlignment="Center" Width="620"  HorizontalAlignment="Center">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition  Width="10"/>
                                                <ColumnDefinition  Width="175"/>
                                                <ColumnDefinition  Width="175"/>
                                                <ColumnDefinition  Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding RoboQueueViewModel.ProgressEstimator.ProgressEstimatorDirs}"  Grid.Column="1" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Width="150" Height="120" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Black" />
                                            <TextBlock Text="{Binding RoboQueueViewModel.ProgressEstimator.ProgressEstimatorFiles}" Grid.Column="2" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Width="150" Height="120" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Black" />
                                            <TextBlock Text="{Binding RoboQueueViewModel.ProgressEstimator.ProgressEstimatorBytes}" Grid.Column="3" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Width="150" Height="120" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Black" />
                                        </Grid>
                                    </GroupBox>
                                    <!-- Progress Bar -->
                                    <TextBlock Text="Jobs Complete:" Grid.Row="2" Grid.Column="0" TextWrapping="Wrap" FontWeight="Bold"/>
                                    <TextBlock Text="{Binding RoboQueueViewModel.JobsCompleteText}"  Grid.Row="2" Grid.Column="1" FontWeight="Bold" TextAlignment="Right" HorizontalAlignment="Left" TextWrapping="Wrap" />
                                    <ProgressBar Value="{Binding RoboQueueViewModel.TotalJobsComplete}" Maximum="{Binding RoboQueueViewModel.TotalJobsCount}" Grid.Row="3" Grid.ColumnSpan="2" Minimum="0" HorizontalAlignment="Center" Height="20" Width="625"/>
                                    <!-- Command Progress -->
                                    <ScrollViewer Grid.Row="5" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                        <ListView ItemsSource="{Binding RoboQueueViewModel.RunningCommands}">
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <views:CommandProgressView HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>

                                        </ListView>
                                    </ScrollViewer>
                                </Grid>
                            </Expander>
                            <!-- End Of Progress Expander -->
                            <Expander Header="{Binding RoboQueueViewModel.ProgressEstimator.ErrorsHeader, FallbackValue='Errors'}" Background="LightGreen" >
                                <DataGrid ItemsSource="{Binding RoboQueueViewModel.ProgressEstimator.Errors}" MinHeight="100" Margin="10"/>
                            </Expander>
                            <local:JobHistoryExpander DataContext="{Binding RoboQueueViewModel.ListOnlyResults}" Header="List-Only Results" RenderTransformOrigin="0.5,0.5"/>
                            <local:JobHistoryExpander DataContext="{Binding RoboQueueViewModel.RunResults}" Header="Run Results" RenderTransformOrigin="0.5,0.5"/>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <!-- BatchCommand -->
            <TabItem Header="Extensions.BatchCommand">
                <views:BatchCommandView DataContext="{Binding BatchCommandViewModel}"/>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
